
#https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html
#http://stackoverflow.com/questions/33442314/how-can-i-configure-spring-boot-spring-jpa-spring-test-and-hibernate-to-creat
#https://springframework.guru/category/spring/spring-boot/
#http://www.javabeat.net/spring-boot-sql-databases/

info.app.name=Spring Boot Batch 01
info.app.description=Project to test spring boot batch functionalities.
info.build.group=@project.groupId@
info.build.artifact=@project.artifactId@
info.build.version=@project.version@

# ----------------------------------------
# DATASOURCE PROPERTIES
# ----------------------------------------
##HIKARICP
spring.datasource.platform=hsqldb
spring.datasource.initialize=true
spring.datasource.schema=classpath:/data/hsqldb/script_hsqldb_ddl.sql
spring.datasource.data=classpath:/data/hsqldb/script_hsqldb_dml.sql
spring.datasource.url=jdbc:hsqldb:mem:testdb
#spring.datasource.driverClassName=org.hsqldb.jdbc.JDBCDataSource
spring.datasource.driverClassName=org.hsqldb.jdbcDriver
spring.datasource.username=sa
spring.datasource.password=sa
spring.datasource.poolName=SpringBootHikariCP
spring.datasource.maximumPoolSize=5
spring.datasource.minimumIdle=3
spring.datasource.maxLifetime=2000000
spring.datasource.connectionTimeout=30000
spring.datasource.idleTimeout=30000
spring.datasource.pool-prepared-statements=true
spring.datasource.max-open-prepared-statements=250
spring.datasource.continue-on-error=false

##TOMCATCP
#spring.datasource.platform=hsqldb
#spring.datasource.continue-on-error=false
#spring.datasource.initialize=true
#spring.datasource.schema=classpath:/data/hsqldb/script_hsqldb_ddl.sql
#spring.datasource.data=classpath:/data/hsqldb/script_hsqldb_dml.sql
#spring.datasource.url=jdbc:hsqldb:mem:testdb
#spring.datasource.driverClassName=org.hsqldb.jdbcDriver
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.datasource.initialsize=5
#spring.datasource.maxactive=10
#spring.datasource.name=testdb
#spring.datasource.poolpreparedstatements=true
#spring.datasource.maxopenpreparedstatements=10


#spring.batch.initializer.enabled=false

#Quartz
quartz.enabled=true
quartz.propfile=quartz-local1.properties


# ----------------------------------------
# ACTUATOR PROPERTIES
# ----------------------------------------
endpoints.enabled=true
# Enable endpoints.
#endpoints.sensitive=
# Default endpoint sensitive setting.

endpoints.actuator.enabled=true
# Enable the endpoint.
#endpoints.actuator.path=
# Endpoint URL path.
endpoints.actuator.sensitive=false
# Enable security on the endpoint.

endpoints.autoconfig.enabled=true
#Enable the endpoint.
#endpoints.autoconfig.id=
#Endpoint identifier.
endpoints.autoconfig.sensitive=false
#Mark if the endpoint exposes sensitive information.

endpoints.beans.enabled=true
# Enable the endpoint.
#endpoints.beans.id=
# Endpoint identifier.
endpoints.beans.sensitive=false
# Mark if the endpoint exposes sensitive information.

endpoints.configprops.enabled=true
# Enable the endpoint.
#endpoints.configprops.id=
# Endpoint identifier.
#endpoints.configprops.keys-to-sanitize=password,secret,key,.*credentials.*,vcap_services
# Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.
endpoints.configprops.sensitive=false
# Mark if the endpoint exposes sensitive information.

endpoints.dump.enabled=true
# Enable the endpoint.
#endpoints.dump.id=
# Endpoint identifier.
endpoints.dump.sensitive=false
# Mark if the endpoint exposes sensitive information.

endpoints.env.enabled=true
# Enable the endpoint.
#endpoints.env.id=
# Endpoint identifier.
#endpoints.env.keys-to-sanitize=password,secret,key,.*credentials.*,vcap_services
# Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.
endpoints.env.sensitive=false
# Mark if the endpoint exposes sensitive information.

endpoints.health.enabled=true
# Enable the endpoint.
endpoints.health.id: status
#endpoints.health.mapping.*=
# Mapping of health statuses to HttpStatus codes. By default, registered health statuses map to sensible defaults (i.e. UP maps to 200).
endpoints.health.sensitive: false
endpoints.health.time-to-live: 1000
# Time to live for cached result, in milliseconds.

endpoints.info.enabled=true
# Enable the endpoint.
#endpoints.info.id=
# Endpoint identifier.
endpoints.info.sensitive=false
# Mark if the endpoint exposes sensitive information.

endpoints.logfile.enabled=true
# Enable the endpoint.
#endpoints.logfile.path=/logfile
# Endpoint URL path.
endpoints.logfile.sensitive=false
# Enable security on the endpoint.

endpoints.mappings.enabled=true
# Enable the endpoint.
#endpoints.mappings.id=
# Endpoint identifier.
endpoints.mappings.sensitive=false
# Mark if the endpoint exposes sensitive information.

endpoints.metrics.enabled=true
# Enable the endpoint.
#endpoints.metrics.filter.enabled=true
# Enable the metrics servlet filter.
#endpoints.metrics.id=
# Endpoint identifier.
endpoints.metrics.sensitive=false
# Mark if the endpoint exposes sensitive information.

endpoints.shutdown.enabled=true
#endpoints.shutdown.id=
# Endpoint identifier.
endpoints.shutdown.sensitive=false

endpoints.trace.enabled=true
# Enable the endpoint.
#endpoints.trace.id=
# Endpoint identifier.
endpoints.trace.sensitive=false
# Mark if the endpoint exposes sensitive information.

# MANAGEMENT HTTP SERVER (ManagementServerProperties)
management.add-application-context-header=true
# Add the "X-Application-Context" HTTP header in each response.
#management.address:
# Network address that the management endpoints should bind to.
management.context-path=/monitor
#management.port=
# Management endpoint HTTP port. Use the same port as the application by default.
#management.security.enabled=false
# Enable security.
#management.security.role=SYSADMIN
#management.security.sessions=stateless
# Session creating policy to use (always, never, if_required, stateless).

# HEALTH INDICATORS (previously health.*)
management.health.db.enabled=true
# Enable database health check.
management.health.defaults.enabled=true
# Enable default health indicators.
management.health.diskspace.enabled=true
# Enable disk space health check.
#management.health.diskspace.path=
# Path used to compute the available disk space.
management.health.diskspace.threshold=1000000000
# Minimum disk space that should be available, in bytes.
management.health.status.order=DOWN, OUT_OF_SERVICE, UNKNOWN, UP
# Comma-separated list of health statuses in order of severity.

# TRACING ((TraceProperties)
management.health.trace.include=request-headers,response-headers,errors
# Items to be included in the trace.

# JMX ENDPOINT (EndpointMBeanExportProperties)
#endpoints.jmx.domain=
# JMX domain name. Initialized with the value of 'spring.jmx.default-domain' if set.
endpoints.jmx.enabled=false
# Enable JMX export of all endpoints.
#endpoints.jmx.static-names=
# Additional static properties to append to all ObjectNames of MBeans representing Endpoints.
#endpoints.jmx.unique-names=false
# Ensure that ObjectNames are modified in case of conflict.







